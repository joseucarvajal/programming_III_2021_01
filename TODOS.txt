=============================== Feb, 21, 2021 ===============================
Create new project
	Sales
		classes:
			SalesMan/Seller
				Name
				Age
			Product
				Name
				Price
			Sale
				Product
				Seller
				Comments
		
		Create at least 3 objects/instances out of each class
		Calculate sales total amount
			E.G. 
				v1 = 500
				v2 = 300
				v3 = 150
				
			Sales total amount: 950
			
	Constraints:
		1. Individual
		2. Deadline: Feb 19. 24:00 PM
		3. New gitHub project "sales-system"

=============================== Mar, 02, 2021 ===============================
New requirements for the Sales systems
	Sales systems reports:
		1. Who's the seller (sales man name), who has sold the cheapest product.
		2. Products price average.
		3. How many unit of the product has been sold.
		4. What's the most expensive product.

	Constraints:
		1. Individual
		2. A new Github project must be created, named: "sales-system-2"
		3. Application working screenshots must be attached. A single screenshot for any new requirement.
		4. Arrays must be applied to code the solution.

=============================== Mar, 23, 2021 ===============================
	Create a new project in GitHub named: "recursion-practice"
	The following exercises should be solved:

	Exercises taken from: https://www.w3resource.com/c-programming-exercises/recursion/index.php

	1. Write a program in C# to calculate the sum of numbers from 1 to n using recursion. Go to the editor
	Test Data : 
	Input the last number of the range starting from 1 : 5 
	Expected Output :

	The sum of numbers from 1 to 5 : 
	15

	2. Write a program in C# to find the sum of digits of a number using recursion. Go to the editor
	Test Data : 
	Input any number to find sum of digits: 25 
	Expected Output :

	The Sum of digits of 25 = 7 

	3. Write a program in C to check a number is a prime number or not using recursion. Go to the editor
	Test Data : 
	Input any positive number : 7 
	Expected Output :

	The number 7 is a prime number.   

	4. Spiderman is capable to jump one or two buildings


	0				|	|	|	|
	Spiderman		b1	b2	b3	b4

	Spider could jump to b1, or b2. Once Spiderman has jumped to the b2, he could jump to the b3 or b4 buildings. 
	Spiderman is always able to jump 1 or 2 buildings.
	How many ways has Spiderman to go up n buildings.

	(e.g.) 

	input
	n = 3

	0				|	|	|
	Spiderman		b1	b2	b3

	output
	way 1 (b1, b3)
	way 2 (b1, b2, b3)
	way 3 (b2, b3)

	Answer: 3 ways.

	Constraints:
		1. These exercises must be solved individually.


=============================== Apr, Fri, 23th, 2021 ===============================
	1. Create a new project in GitHub named: "university-binary-tree"
	2. Create all of the nodes we saw in class
	3. Attach screenshots (png, jpg):
		3.1. code class (all of them)
		3.2. Program.cs: displaying all of the objects
		3.3. Console with results (salary sum)
		
=============================== May, Wed, 19th, 2021 ===============================
	1. Create a new project in GitHub named: "university-binary-tree-v2"
	2. Exercises:
		2.1. Get the longest salary (without including "the principal".
		2.2. Calculate the salary average
		2.3. How much is the salary given a certain position (e.g. "Vicerector financiero")
		2.4. Add salary tax (percentaje 0%-30%), each position has a different tax percentaje
			2.4.1. How much money is total taxes
	3. Attach screenshots (png, jpg):
		3.1. code class (all of them)
		3.2. Program.cs: displaying all of the objects
		3.3. Console with results (salary sum)

------------ Final grades   -----
April 7, 14,

May 12, 19

